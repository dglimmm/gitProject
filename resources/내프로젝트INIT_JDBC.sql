DROP TABLE EMPLOYEE;
CREATE TABLE EMPLOYEE(
    EMPNO   NUMBER PRIMARY KEY,
    EMPGRADE CHAR(5) CHECK (EMPGRADE IN ('A','U')) NOT NULL,
    EMPID VARCHAR2(20) NOT NULL UNIQUE,
    EMPPWD VARCHAR2(20) NOT NULL,
    name   VARCHAR2(15 BYTE) NOT NULL, 
    gender   CHAR(5 BYTE) CHECK(gender IN ('³²','¿©')) NOT NULL, 
    phone VARCHAR2(20 BYTE) NOT NULL UNIQUE, 
    dept   VARCHAR2(20),
    salary   NUMBER NOT NULL, 
    bonus   NUMBER default 0
);

DROP SEQUENCE SEQ_EMPNO;
CREATE SEQUENCE SEQ_EMPNO
NOCACHE;

INSERT INTO EMPLOYEE
VALUES(SEQ_EMPNO.NEXTVAL, 'A','ehdrjs','1234','ÀÓµ¿°Ç', '³²', '1234', '¿µ¾÷¸¶ÄÉÆÃÆÀ', '9000000', '0.5');

INSERT INTO EMPLOYEE
VALUES(SEQ_EMPNO.NEXTVAL, 'U','USER02','1234','±èÃ¶¼ö', '³²', '010-2222-2222', 'ºñ¼­½Ç', '5000000', '0.2');

INSERT INTO EMPLOYEE
VALUES(SEQ_EMPNO.NEXTVAL, 'U','USER03','1234','¿ÀÁö¸í', '¿©', '010-2223-1111', 'È«º¸ÆÀ', '3500000', '0.1');

DROP TABLE ROOM;
CREATE TABLE ROOM(
    ROOM_NAME VARCHAR2(50) PRIMARY KEY,  
    ROOM_PEOPLE NUMBER NOT NULL,
    BIM CHAR(5) CHECK (BIM IN ( 'Y' , 'N') ) NOT NULL, 
    WIFI CHAR(5) CHECK (WIFI IN ( 'Y' , 'N') ) NOT NULL, 
    ROOM_YN CHAR(5) CHECK (ROOM_YN IN ( 'Y' , 'N') ) NOT NULL,
    rno number
);

INSERT INTO ROOM(ROOM_NAME,ROOM_PEOPLE,BIM,WIFI,ROOM_YN)
VALUES('°¡³ª´Ù·ë', '4', 'Y', 'Y', 'Y');
INSERT INTO ROOM (ROOM_NAME,ROOM_PEOPLE,BIM,WIFI,ROOM_YN)
VALUES('¸¶¹Ù»ç·ë', '6', 'Y', 'N' ,'Y');
INSERT INTO ROOM (ROOM_NAME,ROOM_PEOPLE,BIM,WIFI,ROOM_YN)
VALUES('¾ÆÀÚÂ÷·ë', '8', 'N', 'Y', 'Y');

DROP TABLE RESERVATION_LOG;
CREATE TABLE RESERVATION_LOG(
    rno number PRIMARY KEY,
    ROOM_NAME VARCHAR2(50), 
    EMPNO NUMBER,
    STATUS VARCHAR2(10) DEFAULT 'NO',
    FOREIGN KEY (ROOM_NAME) REFERENCES ROOM (ROOM_NAME),
    FOREIGN KEY (EMPNO) REFERENCES EMPLOYEE (EMPNO)
);

DROP SEQUENCE SEQ_rno;
CREATE SEQUENCE SEQ_rno
NOCACHE;

CREATE OR REPLACE TRIGGER TRG_01
AFTER DELETE ON RESERVATION_LOG
FOR EACH ROW
BEGIN
        UPDATE ROOM
        SET ROOM_YN = 'Y'
        WHERE room_name =:OLD.room_name;

END;
/

CREATE OR REPLACE TRIGGER TRG_02
AFTER UPDATE ON RESERVATION_LOG
FOR EACH ROW
BEGIN
    IF(:NEW.STATUS = 'YES')
        THEN UPDATE ROOM
        SET ROOM_YN = 'N'
        WHERE room_name =:NEW.room_name;
    END IF;
    
    UPDATE ROOM
        SET RNO = :NEW.rno
        WHERE room_name = :NEW.room_name;
    
END;
/
COMMIT;
